name: sysfoo-devsecops-pipeline
on:
  push:
    branches:
      - docker-ci
jobs:
  build-sysfoo-war:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout or Code Clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Secret Scanning
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=santhosh-devops-demo
            -Dsonar.projectKey=santhosh-devops-demo_sysfoo
            -Dsonar.sources=.
            -Dsonar.verbose=true
            -Dsonar.language=java
            -Dsonar.java.binaries=./target/classes
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Run mvn test
        run: mvn test
      - name: Run mvn clean & mvn package
        run: mvn clean package
      - name: Run ls command
        run: ls -lrt
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sysfoo
          path: target/sysfoo.war
  build-sysfoo-docker:
    runs-on: ubuntu-latest
    needs:
      - build-sysfoo-war
    steps:
      - name: Code Checkout or Code Clone
        uses: actions/checkout@v4
      - name: Dockerfile Scan
        run: echo "Use Checkov / Hadolint for Dockerfile Scan"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/sysfoo:v2 .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: docker.io/${{ secrets.DOCKER_USERNAME }}/sysfoo:v2
          format: sarif
          output: trivy-results.sarif
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/sysfoo:v2
  deploy-in-k8s:
    runs-on: ubuntu-latest
    needs:
      - build-sysfoo-docker
    steps:
      - name: Code Checkout or Code Clone
        uses: actions/checkout@v4
      - name: Start minikube
        uses: medyagh/setup-minikube@latest
      - name: Try the cluster!
        run: kubectl get pods -A
      - name: Deploy to minikube
        run: |
          kubectl apply -f manifests/deployment.yaml
          kubectl apply -f manifests/service.yaml
          kubectl wait --for=condition=ready pod -l app=sysfoo
      - name: Test service URLs
        run: |
          minikube service list
          minikube service sysfoo-service --url
          echo -n "------------------opening the service-----------------"
          curl $(minikube service sysfoo-service --url)
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: devsecops
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Deployed Sysfoo application :rocket:'
          SLACK_TITLE: Deployment Status
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: Sysfoo
